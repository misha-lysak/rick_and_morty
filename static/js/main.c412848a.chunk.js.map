{"version":3,"sources":["api.js","components/Card/Card.jsx","components/CardDescription/CardDescription.jsx","components/CardList/CardList.jsx","App.jsx","index.jsx"],"names":["BASE_URL","Card","character","handleSelect","console","log","onClick","id","onKeyUp","className","role","tabIndex","src","image","alt","name","defaultProps","CardDescription","selectedCard","status","species","gender","location","CardList","characters","useState","selectedCardId","setSelectedCardId","setSelectedCard","useCallback","find","useEffect","fetch","then","response","Error","json","map","App","setCharacters","ok","results","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAAMA,G,MAAW,mC,cCIJC,EAAO,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAGhC,OAFAC,QAAQC,IAAI,SAGV,sBACEC,QAAS,kBAAMH,EAAaD,EAAUK,KACtCC,QAAS,kBAAML,EAAaD,EAAUK,KACtCE,UAAU,OACVC,KAAK,SACLC,SAAU,EALZ,UAOE,qBAAKF,UAAU,YAAYG,IAAKV,EAAUW,MAAOC,IAAKZ,EAAUa,OAChE,mBAAGN,UAAU,aAAb,SAA2BP,EAAUa,WAc3Cd,EAAKe,aAAe,CAClBd,UAAW,I,UC3BAe,EAAkB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEhC,OADAd,QAAQC,IAAI,qBAAsBa,GAEhC,sBAAKT,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAYG,IAAKM,EAAaL,MAAOC,IAAKI,EAAaH,OACtE,oBAAGN,UAAU,aAAb,UACE,sBAAMA,UAAU,mBAAhB,oBACA,sBAAMA,UAAU,oBAAhB,SAAqCS,EAAaH,UAEpD,oBAAGN,UAAU,aAAb,UACE,sBAAMA,UAAU,mBAAhB,sBACA,sBAAMA,UAAU,oBAAhB,SAAqCS,EAAaC,YAEpD,oBAAGV,UAAU,aAAb,UACE,sBAAMA,UAAU,mBAAhB,uBACA,sBAAMA,UAAU,oBAAhB,SAAqCS,EAAaE,aAEpD,oBAAGX,UAAU,aAAb,UACE,sBAAMA,UAAU,mBAAhB,sBACA,sBAAMA,UAAU,oBAAhB,SAAqCS,EAAaG,YAEnDH,EAAaI,UACZ,oBAAGb,UAAU,aAAb,UACE,sBAAMA,UAAU,mBAAhB,wBACA,sBAAMA,UAAU,oBAAhB,SAAqCS,EAAaI,SAASP,cAoBrEE,EAAgBD,aAAe,CAC7BE,aAAc,IC1CT,IAAMK,EAAW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACEC,mBAAS,GADX,mBACnCC,EADmC,KACnBC,EADmB,OAEFF,mBAAS,MAFP,mBAEnCP,EAFmC,KAErBU,EAFqB,KAI1CxB,QAAQC,IAAI,OAAQmB,GACpB,IAAMrB,EAAe0B,uBACnB,SAACtB,GACCoB,EAAkBpB,GAClBqB,EAAgBJ,EAAWM,MAAK,SAAC5B,GAAD,OAAeA,EAAUK,KAAOoB,MAChEvB,QAAQC,IAAI,WAAYE,KACvB,IAQL,OALAwB,qBAAU,WHNa,IAACxB,KGOZmB,EHNZM,MAAM,GAAD,OAAIhC,EAAJ,sBAA0BO,IAC5B0B,MAAK,SAACC,GACL,IAAKA,EACH,MAAM,IAAIC,MAAM,sBAGlB,OAAOD,EAASE,WGCfH,KAAKL,KACP,CAACF,IAGF,qCACE,qBAAKjB,UAAU,YAAf,SACGe,EAAWa,KAAI,SAACnC,GAAD,OACd,cAAC,EAAD,CAEEA,UAAWA,EACXC,aAAcA,GAFTD,EAAUK,SAMH,OAAjBW,EACC,cAAC,EAAD,CAAiBA,aAAcA,IAC7B,OCjBKoB,MAhBf,WAAgB,IAAD,EACuBb,mBAAS,IADhC,mBACND,EADM,KACMe,EADN,KASb,OANAR,qBAAU,WJLVC,MAAM,GAAD,OAAIhC,EAAJ,eACFiC,MAAK,SAACC,GACL,IAAKA,EAASM,GACZ,MAAM,IAAIL,MAAM,0BAGlB,OAAOD,EAASE,UAEjBH,MAAK,SAACC,GAAD,OAAcA,EAASO,WID1BR,KAAKM,KACP,IAEHnC,QAAQC,IAAImB,GAEV,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,CAAUe,WAAYA,OCX5BkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c412848a.chunk.js","sourcesContent":["const BASE_URL = 'https://rickandmortyapi.com/api';\n\nexport const getHaracters = () => (\n  fetch(`${BASE_URL}/character`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('can\\'t upload your data');\n      }\n\n      return response.json();\n    })\n    .then((response) => response.results)\n);\n\nexport const getPerson = (id) => (\n  fetch(`${BASE_URL}/character/${id}`)\n    .then((response) => {\n      if (!response) {\n        throw new Error('wrong id of person');\n      }\n\n      return response.json();\n    })\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Card.scss';\n\nexport const Card = ({ character, handleSelect }) => {\n  console.log('hello');\n\n  return (\n    <div\n      onClick={() => handleSelect(character.id)}\n      onKeyUp={() => handleSelect(character.id)}\n      className=\"card\"\n      role=\"button\"\n      tabIndex={0}\n    >\n      <img className=\"card__img\" src={character.image} alt={character.name} />\n      <p className=\"card__name\">{character.name}</p>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  character: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    id: PropTypes.number,\n  }),\n  handleSelect: PropTypes.func.isRequired,\n};\n\nCard.defaultProps = {\n  character: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../Card/Card.scss';\n\nexport const CardDescription = ({ selectedCard }) => {\n  console.log('selected card =>>>', selectedCard);\n  return (\n    <div className=\"card\">\n      <img className=\"card__img\" src={selectedCard.image} alt={selectedCard.name} />\n      <p className=\"card__name\">\n        <span className=\"card__text--left\">Name: </span>\n        <span className=\"card__text--right\">{selectedCard.name}</span>\n      </p>\n      <p className=\"card__name\">\n        <span className=\"card__text--left\">Status: </span>\n        <span className=\"card__text--right\">{selectedCard.status}</span>\n      </p>\n      <p className=\"card__name\">\n        <span className=\"card__text--left\">Species: </span>\n        <span className=\"card__text--right\">{selectedCard.species}</span>\n      </p>\n      <p className=\"card__name\">\n        <span className=\"card__text--left\">Gender: </span>\n        <span className=\"card__text--right\">{selectedCard.gender}</span>\n      </p>\n      {selectedCard.location && (\n        <p className=\"card__name\">\n          <span className=\"card__text--left\">Location: </span>\n          <span className=\"card__text--right\">{selectedCard.location.name}</span>\n        </p>\n      )}\n    </div>\n  );\n};\n\nCardDescription.propTypes = {\n  selectedCard: PropTypes.shape({\n    name: PropTypes.string,\n    status: PropTypes.string,\n    image: PropTypes.string,\n    species: PropTypes.string,\n    gender: PropTypes.string,\n    location: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  }),\n};\n\nCardDescription.defaultProps = {\n  selectedCard: {},\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from '../Card';\nimport './CardList.scss';\nimport { CardDescription } from '../CardDescription';\nimport { getPerson } from '../../api';\n\nexport const CardList = ({ characters }) => {\n  const [selectedCardId, setSelectedCardId] = useState(0);\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  console.log('list', characters);\n  const handleSelect = useCallback(\n    (id) => {\n      setSelectedCardId(id);\n      setSelectedCard(characters.find((character) => character.id === setSelectedCardId));\n      console.log('id =====', id);\n    }, [],\n  );\n\n  useEffect(() => {\n    getPerson(selectedCardId)\n      .then(setSelectedCard);\n  }, [selectedCardId]);\n\n  return (\n    <>\n      <div className=\"card-list\">\n        {characters.map((character) => (\n          <Card\n            key={character.id}\n            character={character}\n            handleSelect={handleSelect}\n          />\n        ))}\n      </div>\n      {selectedCard !== null ? (\n        <CardDescription selectedCard={selectedCard} />\n      ) : ''}\n    </>\n  );\n};\n\nCardList.propTypes = {\n  characters: PropTypes.arrayOf(\n    PropTypes.shape({\n    }),\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { getHaracters } from './api';\nimport { CardList } from './components/CardList';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    getHaracters()\n      .then(setCharacters);\n  }, []);\n\n  console.log(characters);\n  return (\n    <div className=\"App\">\n      <CardList characters={characters} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}